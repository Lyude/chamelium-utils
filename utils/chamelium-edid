#!/usr/bin/python3
from xmlrpc.client import ServerProxy
from sys import stderr, exit
import argparse

def set_edid(chamelium, args):
    if args.edid_file != None:
        edid_id = chamelium.CreateEdid(args.edid_file.read())
        print("Created EDID #%d" % edid_id)
    elif args.default_edid:
        edid_id = 0
    else:
        parser.error('No edid file given and --default-edid not set')
        exit(1)

    if not args.no_replug:
        chamelium.Unplug(args.port)
    chamelium.ApplyEdid(args.port, edid_id)
    if not args.no_replug:
        chamelium.Plug(args.port)

    print("EDID changed")

def get_edid(chamelium, args):
    args.output.write(chamelium.ReadEdid(args.port))

def delete_edid(chamelium, args):
    chamelium.DestroyEdid(args.edid_id)
    print("Deleted edid %d" % args.edid_id)

def chamelium_url_parser(string):
    if not (string.startswith('http://') or string.startswith('https://')):
        raise argparse.ArgumentTypeError("'%s' is not a valid URL" % string)

    return string

parser = argparse.ArgumentParser(
        description="Set the EDID of a Chamelium from a file",
        formatter_class = argparse.ArgumentDefaultsHelpFormatter)
parser.add_argument('chamelium_url', help="The URL of the Chamelium RPC server to use",
                    type=chamelium_url_parser)

subparsers = parser.add_subparsers(help='-h')
set_parser = subparsers.add_parser('set', help='Set the current EDID for a port on the Chamelium')
set_parser.add_argument('port', help="The port to set the EDID for", type=int)
set_parser.add_argument('edid_file', help="The file to read the EDID from",
                        type=argparse.FileType('rb'), nargs='?')
set_parser.add_argument('--no-replug', help="Don't replug the display after setting the edid",
                        default=False, action="store_true")
set_parser.add_argument('--default-edid', help="Use the Chamelium's default EDID",
                        default=False, action="store_true")
set_parser.set_defaults(func=set_edid)

get_parser = subparsers.add_parser('get', help='Get the EDID currently applied to a port')
get_parser.add_argument('port', help='The port to read the EDID of', type=int)
get_parser.add_argument('-o', '--output', help='Where to write the EDID to',
                        type=argparse.FileType('wb'), default='/dev/stdout')
get_parser.set_defaults(func=get_edid)

delete_parser = subparsers.add_parser('delete', help='Delete an EDID from the chamelium')
delete_parser.add_argument('edid_id', help='The ID of the EDID', type=int)
delete_parser.set_defaults(func=delete_edid)

args = parser.parse_args()

if 'func' not in args:
    parser.print_usage()
    exit(1)

try:
    chamelium = ServerProxy(args.chamelium_url, allow_none=True,
                            use_builtin_types=True)
except Exception as e:
    stderr.write("Failed to connect to chamelium RPC server: %s\n" % e)
    exit(1)

args.func(chamelium, args)

# vim: set ft=python:
